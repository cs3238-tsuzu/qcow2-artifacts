name: Linter

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use latest Packer
        uses: hashicorp-contrib/setup-packer@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install zx
        run: |
          npm i -g zx
      
      - name: Set up git
        run: |
          git config --global user.email "cs3238-tsuzu@users.noreply.github.com"
          git config --global user.name "Tsuzu"

      - name: packer validator/linter
        run: |
          echo "$SCRIPT" > /tmp/script.mjs
          zx /tmp/script.mjs
        env: 
          SCRIPT: |
            const pullReq = "${{github.event_name}}" === "pull_request";
            const configs = (await $`find images -name "*.json"`)
              .stdout
              .split("\n")
              .filter(x => x !== "");

            const format = async (writeResult) => {
              const unformatted = [];
              await Promise.all(configs.map(async c => {
                const formatted = (await $`packer fix ${c}`).stdout;

                if (formatted === await fs.readFile(c)) {
                  return;
                }

                unformatted.push(c);

                if (writeResult) {
                  await fs.writeFile(c, formatted);
                }
              }));

              return unformatted;
            };

            let unformatted = await format(pullReq);

            if (unformatted.length && pullReq) {
              await $`git add . && git commit -m "packer fix"`;
              await $`git push origin ${{ github.ref }}`;

              unformatted = await format(false);
            }

            if (unformatted.length) {
              throw new Error("Following files are not formatted:\n" + unformatted.join("\n"));
            }

            await Promise.all(configs.map(async c => {
              await $`packer validate ${c}`
            }));

